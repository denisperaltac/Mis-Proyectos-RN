import {useState, useEffect} from 'react';
import movieDB from '../api/movieDB';
import {Cast, CreditsResponce} from '../interfaces/creditsInterface';
import {MovieFull} from '../interfaces/movieInterface';

interface MovieDetails {
  isLoading: boolean;
  movieFull?: MovieFull;
  cast: Cast[];
}

export const useMovieDetails = (movieID: number) => {
  const [movieFullDetail, setMovieFullDetail] = useState<MovieDetails>({
    isLoading: true,
    cast: [],
  });

  const getMovieDetails = async () => {
    const movieDetailsPromise = movieDB.get<MovieFull>(`/${movieID}`);
    const castPromise = movieDB.get<CreditsResponce>(`/${movieID}/credits`);

    const [movieDetailsResponse, castPromiseResponse] = await Promise.all([
      movieDetailsPromise,
      castPromise,
    ]);
    setMovieFullDetail({
      isLoading: false,
      movieFull: movieDetailsResponse.data,
      cast: castPromiseResponse.data.cast,
    });
  };

  useEffect(() => {
    getMovieDetails();
  }, []);

  return {...movieFullDetail};
};
// Generated by https://quicktype.io
